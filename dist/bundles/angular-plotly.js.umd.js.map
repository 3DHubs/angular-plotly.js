{
  "version": 3,
  "file": "angular-plotly.js.umd.js",
  "sources": [
    "ng://angular-plotly.js/out/src/app/plotly/plotly.module.ts",
    "ng://angular-plotly.js/out/src/app/plotly/plot/plot.component.ts",
    "ng://angular-plotly.js/out/src/app/plotly/plotly.service.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PlotComponent } from './plot/plot.component';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [PlotComponent],\n    exports: [PlotComponent],\n})\nexport class PlotlyModule {\n\n}\n",
    "import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChange,\n    SimpleChanges,\n    ViewChild,\n    DoCheck,\n    IterableDiffer,\n    IterableDiffers,\n    KeyValueDiffer,\n    KeyValueDiffers,\n} from '@angular/core';\n\nimport { Plotly, PlotlyService } from '../plotly.service';\nimport { NgClass } from '@angular/common';\n\n// @dynamic\n@Component({\n    selector: 'plotly-plot',\n    template: `<div #plot [attr.id]=\"divId\" [className]=\"getClassName()\" [ngStyle]=\"style\"></div>`,\n    providers: [PlotlyService],\n})\nexport class PlotComponent implements OnInit, OnChanges, OnDestroy, DoCheck {\n    protected defaultClassName = 'js-plotly-plot';\n\n    @ViewChild('plot') plotEl: ElementRef;\n\n    @Input() data?: Plotly.Data[];\n    @Input() layout?: Partial<Plotly.Layout>;\n    @Input() config?: Partial<Plotly.Config>;\n    @Input() style?: { [key: string]: string };\n\n    @Input() divId?: string;\n    @Input() revision: number = 0;\n    @Input() className?: string | string[];\n    @Input() debug: boolean = false;\n    @Input() useResizeHandler: boolean = false;\n\n    @Output() initialized = new EventEmitter<Plotly.Figure>();\n    @Output() update = new EventEmitter<Plotly.Figure>();\n    @Output() purge = new EventEmitter<Plotly.Figure>();\n    @Output() error = new EventEmitter<Error>();\n\n    public plotlyInstance: Plotly.PlotlyHTMLElement;\n    public resizeHandler?: (instance: Plotly.PlotlyHTMLElement) => void;\n    public layoutDiffer: KeyValueDiffer<string, any>;\n    public dataDiffer: IterableDiffer<Plotly.Data>;\n\n    constructor(\n        public plotly: PlotlyService,\n        public iterableDiffers: IterableDiffers,\n        public keyValueDiffers: KeyValueDiffers,\n    ) { }\n\n    ngOnInit() {\n        this.createPlot().then(() => {\n            const figure = this.createFigure();\n            this.initialized.emit(figure);\n        });\n    }\n\n    ngOnDestroy() {\n        if (typeof this.resizeHandler === 'function') {\n            this.getWindow().removeEventListener('resize', this.resizeHandler as any);\n            this.resizeHandler = undefined;\n        }\n\n        const figure = this.createFigure();\n        this.purge.emit(figure);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        let shouldUpdate = false;\n\n        const revision: SimpleChange = changes.revision;\n        if (revision && !revision.isFirstChange()) {\n            shouldUpdate = true;\n        }\n\n        const debug: SimpleChange = changes.debug;\n        if (debug && !debug.isFirstChange()) {\n            shouldUpdate = true;\n        }\n\n        if (shouldUpdate) {\n            this.redraw();\n        }\n\n        this.updateWindowResizeHandler();\n    }\n\n    ngDoCheck() {\n        let shouldUpdate = false;\n\n        if (this.layoutDiffer) {\n            const layoutHasDiff = this.layoutDiffer.diff(this.layout);\n            if (layoutHasDiff) {\n                shouldUpdate = true;\n            }\n        } else if (this.layout) {\n            this.layoutDiffer = this.keyValueDiffers.find(this.layout).create();\n        } else {\n            this.layoutDiffer = undefined;\n        }\n\n        if (this.dataDiffer) {\n            const dataHasDiff = this.dataDiffer.diff(this.data);\n            if (dataHasDiff) {\n                shouldUpdate = true;\n            }\n        } else if (Array.isArray(this.data)) {\n            this.dataDiffer = this.iterableDiffers.find(this.data).create(this.dataDifferTrackBy);\n        } else {\n            this.dataDiffer = undefined;\n        }\n\n        if (shouldUpdate && this.plotlyInstance) {\n            this.redraw();\n        }\n    }\n\n    getWindow(): any {\n        return window;\n    }\n\n    getClassName(): string {\n        let classes = [this.defaultClassName];\n\n        if (Array.isArray(this.className)) {\n            classes = classes.concat(this.className);\n        } else if (this.className) {\n            classes.push(this.className);\n        }\n\n        return classes.join(' ');\n    }\n\n    createPlot(): Promise<void> {\n        return this.plotly.newPlot(this.plotEl.nativeElement, this.data, this.layout, this.config).then(plotlyInstance => {\n            this.plotlyInstance = plotlyInstance;\n            this.getWindow().gd = this.debug ? plotlyInstance : undefined;\n\n            this.updateWindowResizeHandler();\n        }, err => {\n            console.error('Error while plotting:', err);\n            this.error.emit(err);\n        });\n    }\n\n    createFigure(): Plotly.Figure {\n        const p: any = this.plotlyInstance;\n        const figure: Plotly.Figure = {\n            data: p.data,\n            layout: p.layout,\n            frames: p._transitionData ? p._transitionData._frames : null\n        };\n\n        return figure;\n    }\n\n    redraw() {\n        if (!this.plotlyInstance) {\n            const error = new Error(`Plotly component wasn't initialized`);\n            this.error.emit(error);\n            throw error;\n        }\n\n        return this.createPlot().then(() => {\n            const figure = this.createFigure();\n            this.update.emit(figure);\n        });\n    }\n\n    updateWindowResizeHandler() {\n        if (this.useResizeHandler) {\n            if (this.resizeHandler === undefined) {\n                this.resizeHandler = () => this.plotly.resize(this.plotlyInstance);\n                this.getWindow().addEventListener('resize', this.resizeHandler as any);\n            }\n        } else {\n            if (typeof this.resizeHandler === 'function') {\n                this.getWindow().removeEventListener('resize', this.resizeHandler as any);\n                this.resizeHandler = undefined;\n            }\n        }\n    }\n\n    dataDifferTrackBy(index: number, item: any): any {\n        const obj = Object.assign({}, item, {uid: ''});\n        return JSON.stringify(obj);\n    }\n\n}\n",
    "import { Injectable } from '@angular/core';\nimport * as Plotlyjs from 'plotly.js/dist/plotly.js';\n\n\nexport namespace Plotly {\n    export type Data = any;\n    export type Layout = any;\n    export type Config = any;\n\n    export interface Figure {\n        data: Data[];\n        layout: Partial<Layout>;\n        frames: Partial<Config>;\n    }\n\n    // tslint:disable-next-line no-empty-interface\n    export interface PlotlyHTMLElement extends HTMLElement {\n\n    }\n}\n\n\n\n@Injectable()\nexport class PlotlyService {\n    protected plotly = Plotlyjs;\n\n    constructor() {\n        if (typeof this.plotly === 'undefined') {\n            throw new Error(`Peer dependency plotly.js isn't installed`);\n        }\n    }\n\n    public newPlot(div: HTMLDivElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>) {\n        return this.plotly.newPlot(div, data, layout);\n    }\n\n    public plot(div: Plotly.PlotlyHTMLElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>) {\n        return this.plotly.plot(div, data, layout);\n    }\n\n    public update(div: Plotly.PlotlyHTMLElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>) {\n        return this.plotly.update(div, data, layout);\n    }\n\n    public resize(div: Plotly.PlotlyHTMLElement): void {\n        return this.plotly.Plots.resize(div);\n    }\n\n}\n"
  ],
  "names": [
    "CommonModule",
    "NgModule",
    "Output",
    "Input",
    "ViewChild",
    "KeyValueDiffers",
    "IterableDiffers",
    "Component",
    "EventEmitter",
    "Injectable"
  ],
  "mappings": "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"
}
